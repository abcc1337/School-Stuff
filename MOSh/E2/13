#include <bits/stdc++.h>

#define mp make_pair
#define pb push_back

#define all(a) (a).begin(), (a).end()
#define sz(a) (int) (a).size()

using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

const int maxn = 1005;

int n, k;

int solve(int len, int st)
{
    if (!st)
    {
        int ans = len / k;
        if (len % k) ++ans;
        return ans;
    }
    if (len <= st) return 1;
    len -= st;
    int ans = 1 + len / k;
    if (len % k) ++ans;
    return ans;
}

int main()
{

    ifstream cin("monument.in");
    ofstream cout("monument.out");

    cin >> n >> k;

    vector <vector <int> > p(maxn);

    vector <pii> m(n);

    for (int i = 0; i < n; i++)
        cin >> m[i].first >> m[i].second;

    for (int i = 0; i < n; i++)
        if (m[i].second != m[(i + 1) % n].second)
    {
        int l = min(m[i].second, m[(i + 1) % n].second), r = max(m[i].second, m[(i + 1) % n].second);
        for (int j = l; j < r; j++)
            p[j].pb(m[i].first);
    }

    for (int i = 0; i < maxn; i++)
        sort(all(p[i]));

    int ans = 1000000000;

    for (int i = 0; i < k; i++)
    {
        int cnt = 0;
        if (sz(p[0]) == 2)
            cnt += solve(p[0][1] - p[0][0], i);
        for (int j = 1; j < maxn; j++)
            if (sz(p[j]) == 2)
        {
            int d = (-p[j][0] + j + i) % k;
            if (d < 0) d += k;
            cnt += solve(p[j][1] - p[j][0], d);
        }
        if (cnt < ans) ans = cnt;
    }

    cout << ans << '\n';

}
