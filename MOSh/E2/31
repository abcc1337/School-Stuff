#define deb 0
#include <iostream>
#include <cmath>
#include <vector>
#include <algorithm>
#include <ctime>
#include <map>
#include <set>
#include <string>
using namespace std;

#define name ""
typedef long long ll;
#define forn(i, n) for(ll i = 0; i < (ll)n; i++)
#define fornn(i, a, n) for(ll i = a; i < (ll)n; i++)
#define mk make_pair
const int infi = 1e9 + 7;
const int dd = 1e6 + 7;


int dp[1007][1007][2];
int rdp[1007][1007][2];
int rdp2[1007][1007][2];

int main(){
	if (deb){
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	}
	else{
		freopen(name".in", "r", stdin);
		freopen(name".out", "w", stdout);
	}
	int ts;
	cin >> ts;
	while (ts--){
		int n, k;
		cin >> n >> k;
		string s;
		cin >> s;
		forn(i, n + 3){
			forn(j, k + 3){
				dp[i][j][1] = dp[i][j][0] = rdp[i][j][1] = rdp[i][j][0] = rdp2[i][j][1] = rdp2[i][j][0] = infi;
			}
		}
		dp[0][1][0] = dp[0][1][1] = 0;
		dp[1][1][0] = s[0] - '0' != 0;
		dp[1][1][1] = s[0] - '0' != 1;
		fornn(i, 2, n + 1){
			forn(c, 2){
				forn(c2, 2){
					int ef = 0;
					if (s[i - 1] - '0' != c){
						ef++;
					}
					fornn(j, 0, k + 1){
						int t = dp[i - 1][j][c2] + ef;
						if (dp[i][j + (c != c2)][c] > t){
							dp[i][j + (c != c2)][c] = t;
							rdp[i][j + (c != c2)][c] = j;
							rdp2[i][j + (c != c2)][c] = c2;
						}
					}
				}
			}
		}
		int efr = infi, ef, ce, re = n;
		forn(c, 2)
			forn(i, k + 1){
			if (efr > dp[n][i][c]){
				efr = dp[n][i][c];
				ce = c;
				ef = i;
			}
		}
		s.clear();
		forn(i, n){
			s.push_back('0' + ce);
			int cs = rdp2[re][ef][ce];
			int cs2 = rdp[re][ef][ce];
			ce = cs;
			ef = cs2;
			re--;
		}
		reverse(s.begin(), s.end());
		cout << s << '\n';
	}
}