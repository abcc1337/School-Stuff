#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int arr[4001][4001] = { 0 };
int left[1001] = { 0 };
int right[1001] = { 0 };
int down[1001] = { 0 };
int up[1001] = { 0 };
int main() {
	int n, m, ans = 0, curr = 0;
	char c;
	freopen("video.in", "r", stdin);
	freopen("video.out", "w", stdout);
	scanf("%d%d\n", &n, &m);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%c", &c);
			arr[i][j] = (c == '1' ? 1 : 2);
			arr[i+n][j] = (c == '1' ? 1 : 2);
			arr[i+n+n][j] = (c == '1' ? 1 : 2);
			arr[i][j+m] = (c == '1' ? 1 : 2);
			arr[i + n][j+m] = (c == '1' ? 1 : 2);
			arr[i + n + n][j+m] = (c == '1' ? 1 : 2);
			arr[i][j+m+m] = (c == '1' ? 1 : 2);
			arr[i + n][j+m+m] = (c == '1' ? 1 : 2);
			arr[i + n + n][j+m+m] = (c == '1' ? 1 : 2);
		}
		scanf("\n");
	}
	for (int i = 0; i < n - 1; i++) {
		for (int j = 0; j < m - 1; j++) {
			if ((arr[i][j] + arr[i + 1][j] + arr[i][j + 1] + arr[i + 1][j + 1]) % 4 == 0) {
				curr++;
				ans++;
			}
		}
	}
	for (int i = 0; i < n - 1; i++) {
		for (int jj = 0; jj < m; jj++) {
			int j = (jj == 0 ? m - 1 : jj - 1);
			if ((arr[i][jj] + arr[i + 1][jj] + arr[i][j] + arr[i + 1][j]) % 4 == 0) {
				left[jj]++;
			}
		}
	}
	for (int i = 0; i < n - 1; i++) {
		for (int jj = 0; jj < m; jj++) {
			int j = (jj == m - 1 ? 0 : jj + 1);
			if ((arr[i][jj] + arr[i + 1][jj] + arr[i][j] + arr[i + 1][j]) % 4 == 0) {
				right[jj]++;
			}
		}
	}
	for (int ii = 0; ii < n; ii++) {
		for (int j = 0; j < m - 1; j++) {
			int i = (ii == n - 1 ? 0 : ii + 1);
			if ((arr[ii][j] + arr[i][j] + arr[ii][j + 1] + arr[i][j + 1]) % 4 == 0) {
				down[ii]++;
			}
		}
	}
	for (int ii = 0; ii < n; ii++) {
		for (int j = 0; j < m - 1; j++) {
			int i = (ii == 0 ? n - 1 : ii - 1);
			if ((arr[ii][j] + arr[i][j] + arr[ii][j + 1] + arr[i][j + 1]) % 4 == 0) {
				up[ii]++;
			}
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (i > 0) {
				int a = (j == 0 ? m : j);
				int b = (j == m - 1 ? -1 : j);
				if ((arr[n - 2 + n - i + 1 + n][j] + arr[n - 1 + n - i + 1 + n][j] + arr[n - 2 + n - i + 1 + n][a - 1] + arr[n - 1 + n - i + 1 + n][a - 1]) % 4 == 0)left[j]--;
				if ((arr[n - 1 + n - i + 1 + n][j] + arr[0 + n - i + 1 + n][j] + arr[n - 1 + n - i + 1 + n][a - 1] + arr[0 + n - i + 1 + n][a - 1]) % 4 == 0)left[j]++;
				if ((arr[n - 2 + n - i + 1 + n][j] + arr[n - 1 + n - i + 1 + n][j] + arr[n - 2 + n - i + 1 + n][b + 1] + arr[n - 1 + n - i + 1 + n][b + 1]) % 4 == 0)right[j]--;
				if ((arr[n - 1 + n - i + 1 + n][j] + arr[0 + n - i + 1 + n][j] + arr[n - 1 + n - i + 1 + n][b + 1] + arr[0 + n - i + 1 + n][b + 1]) % 4 == 0)right[j]++;
			}
		}
		for (int j = 0; j < m; j++) {
			curr = curr + left[j] - right[(m + j - 2) % (m)];
			ans = curr > ans ? curr : ans;
		}
		curr = curr + up[i] - down[i];
	}
	printf("%d", ans);
	return 0;
}