#include<iostream>
#include<map>
#include<vector>
#include<algorithm>
#define inf 2E+9
using namespace std;
vector<int>y,l,r;
int k;
long long solve(int x){
    long long res=0;
    for(int i=0;i<y.size();i++){
       int tl=(l[i]+x-y[i])/k-1,tr=(r[i]+x-y[i])/k;
       while(tl*k+y[i]+k<=l[i]+x)
		   tl++;
	   while(tr*k+y[i]>=r[i]+x)
		   tr--;
       res+=(long long)(tr-tl+1);
    }
    return res;
}
int main(){
    freopen("monument.in","r",stdin);
    freopen("monument.out","w",stdout);
    int n,Y;
	long long ans=inf/2*inf;
    scanf("%d%d",&n,&k);
    map<int,vector<int>>f;
    vector<pair<int,int>>t(n+1);
    for(int i=0;i<n;i++)
        scanf("%d%d",&t[i].first,&t[i].second);
    t[n]=t[0];
    for(int i=1;i<=n;i++)
        if(t[i-1].second!=t[i].second)
            for(int j=min(t[i-1].second,t[i].second);j<max(t[i-1].second,t[i].second);j++)
                f[j].push_back(t[i].first);
    Y=f.begin()->first;
    for(auto i=f.begin();i!=f.end();i++){
        int mn=inf,mx=-inf;
        for(int j=0;j<i->second.size();j++){
            mn=min(mn,i->second[j]);
            mx=max(mx,i->second[j]);
        }
        y.push_back(Y+y.size());
        l.push_back(mn);
        r.push_back(mx);
    }
	if((long long)k*y.size()<=100000000){
		for(int i=0;i<k;i++)
			ans=min(ans,solve(i));
	}else{
		int m=max((int)100000/(int)y.size(),(int)1),e=max(1,k/m);
		int L=0,R=k;
		for(int l=L,r=l+e;l<R;l+=e,r+=e){
			if(r>R){
				r=R;
				R=-1;
			}
			while(r-l>100){
				int m1=l+(r-l)/10,m2=r-(r-l)/10;
				if(solve(m1)<solve(m2))
					r=m2;
				else
					l=m1;
			}
			for(int i=l;i<=r;i++)
				ans=min(ans,solve(i));
		}
	}
    printf("%lld",ans);
}