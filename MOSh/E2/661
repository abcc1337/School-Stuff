fin = open('penguins.in', 'r')
fout = open('penguines.out', 'w')
t = int(fin.readline())
for g in range(t):
    n, k = [int(i) for i in fin.readline().split()]
    g = fin.readline()
    s = [[[n, n] for i in range(k)] for i in range(n)]
    if g[0] == '0':
        s[0][0][0] = 0
        s[0][0][1] = 1
    else:
        s[0][0][1] = 0
        s[0][0][0] = 1
    for i in range(1, n):
        if g[i] == '0':
            s[i][0][0] = s[i - 1][0][0]
            s[i][0][1] = s[i - 1][0][1] + 1
            for j in range(1, k):
                s[i][j][0] = min(s[i - 1][j][0], min(s[i - 1][j - 1]))
                s[i][j][1] = min(s[i - 1][j][1], min(s[i - 1][j - 1])) + 1
        else:
            s[i][0][0] = s[i - 1][0][0] + 1
            s[i][0][1] = s[i - 1][0][1]
            for j in range(1, k):
                s[i][j][0] = min(s[i - 1][j][0], min(s[i - 1][j - 1])) + 1
                s[i][j][1] = min(s[i - 1][j][1], min(s[i - 1][j - 1]))
    if s[-1][-1][0] > s[-1][-1][1]:
        e = 1
    else:
        e = 0
    c = []
    k -= 1
    for i in range(n - 1, 0, -1):
        c.append(str(e))
        if k != 0:
            a = min(s[i - 1][k][e], min(s[i - 1][k - 1]))
            if a == s[i - 1][k - 1][e]:
                k -= 1
            elif a == s[i - 1][k - 1][1 - e]:
                k -= 1
                e = 1 - e
    c.append(str(e))
    fout.write(''.join(c[::-1]) + '\n')