program zad_3;

{$APPTYPE CONSOLE}

uses
  SysUtils;
var
  use : array[0 .. 3000,0 .. 3000] of integer;
  ar : array[0 .. 3000, 0 .. 3000, 1 .. 4] of integer;
  i, j, n, x1, y1, a, b, q, x2, y2, z, res : integer;
  ch : char;

procedure dfs(y, x : integer);
  begin
    use[y, x] := 1;
    if(ar[y, x, 1] = 1) and (y + 1 <= y2) and (use[y + 1, x] = 0) then
      dfs(y + 1, x);
    if (ar[y, x, 2] = 1) and (x + 1 <= x2) and (use[y, x + 1] = 0) then
      dfs(y, x + 1);
    if(ar[y, x, 3] = 1) and (y > y1) and (use[y - 1, x] = 0) then
      dfs(y - 1, x);
    if(ar[y, x, 4] = 1) and (x > x1) and (use[y, x - 1] = 0) then
      dfs(y, x - 1);
  end;
begin
  reset(input, 'repair.in');
  rewrite(output, 'repair.out');

  for i := 1 to 3000 do
    for j := 1 to 3000 do begin
      ar[i, j, 1] := 0;
      ar[i, j, 2] := 0;
      ar[i, j, 3] := 0;
      ar[i, j, 4] := 0;
    end;

  readln(a, b);
  readln(n, q);
  for i := 1 to n - 1 do begin
    readln(ch, x1, y1);
    //writeln(ch, x1, y1);
    if(ch = 'v') then begin
      ar[y1, x1, 1] := 1;
      ar[y1 + 1, x1, 3] := 1;
    end else begin
      ar[y1, x1, 2] := 1;
      ar[y1, x1 + 1, 4] := 1;
    end;
  end;

  for z := 1 to q do begin
    readln(x1, y1, x2, y2);

    for i := y1 to y2 do
      for j := x1 to x2 do
        use[i, j] := 0;

    res := 0;
    for i := y1 to y2 do
      for j := x1 to x2 do
        if(ar[i, j, 1] + ar[i, j, 2] + ar[i, j, 3] + ar[i, j, 4] > 0) and (use[i, j] = 0) then begin
          inc(res);
          dfs(i, j);
        end;

    writeln(res);
  end;

  readln(n);
end.

4 3
8 4
v 1 1
h 1 1
h 2 1
v 2 1
v 2 2
h 1 3
h 3 1
1 1 4 3
3 2 4 3
3 1 3 1
1 2 3 3