program B;

{$APPTYPE CONSOLE}

uses
  SysUtils,
  math;

var
  n,k,l,i,j,counter,sum,ans,thisans: longint;
  x,y: array [1..1000] of longint;
  arr: array [-2000..2000,-2000..2000] of longint;

begin
  assign(input,'input.txt'); reset(input);
  assign(output,'output.txt'); rewrite(output);
  //assign(input,'monument.in'); reset(input);
  //assign(output,'monument.out'); rewrite(output);

  read(n,k);
  for i:=1 to n do read(x[i],y[i]);

  for i:=2 to n do begin
    if y[i] = y[i-1] then for j:=min(x[i],x[i-1]) to max(x[i],x[i-1])-1 do arr[y[i]][j] := 1;
  end;
  if y[n] = y[1] then for j:=min(x[n],x[1]) to max(x[n],x[1])-1 do arr[y[n]][j] := 1;

  // filling up-to-down
  for j:=0 to 2000 do begin
    counter := 0;
    for i:=0 to 2000 do begin
      inc(counter,arr[i][j]);
      arr[i][j] := 0;
      if counter mod 2 <> 0 then inc(arr[i][j]);
    end;
  end;

  // sum on prefix
  for i:=0 to 2000 do begin
    sum := 0;
    for j:=0 to 2000 do begin
      inc(sum,arr[i][j]);
      arr[i][j] := sum;
    end;
  end;


  ans := trunc(1E9);
  for i:=1 to k do begin
    thisans := 0;
    for j := 0 to 1000 do begin
      l := -1000 - j + i;
      while l < 1001 do begin
        if arr[j][l+k-i-1] - arr[j][l-i] <> 0 then begin
          inc(thisans);
        end;
        inc(l,k);
      end;
    end;
    ans := min(ans,thisans);
  end;

  write(ans);
end.
 