#include <bits/stdc++.h>

using namespace std;

const int INF = 1e8;

int dp[1001][1001][2];

int main() {
    for (int i = 0; i <= 1000; i++) {
        for (int j = 0; j <= 1000; j++) {
            dp[i][j][0] = dp[i][j][1] = INF;
        }
    }
    dp[0][0][0] = dp[0][0][1] = 0;

    ios_base::sync_with_stdio(false);
    freopen("penguins.in", "r", stdin);
    freopen("penguins.out", "w", stdout);

    int tests;
    cin >> tests;

    while (tests--) {
        int n, k;
        string s;
        cin >> n >> k >> s;

        for (int i = 1; i <= n; i++) {
            int c = s[i - 1] - '0';
            for (int j = 1; j <= i; j++) {
                dp[i][j][c] =         min(dp[i - 1][j][c], min(dp[i - 1][j - 1][c], dp[i - 1][j - 1][c ^ 1]));
                dp[i][j][c ^ 1] = 1 + min(dp[i - 1][j][c ^ 1], min(dp[i - 1][j - 1][c], dp[i - 1][j - 1][c ^ 1]));
            }
        }

        string result = s;
        int i = n, j = k;
        int next_c = -1;
        while (i > 0) {
            int c;
            if (next_c != -1) {
                c = next_c;
            } else {
                c = (dp[i][j][0] < dp[i][j][1] ? 0: 1);
            }
            result[i - 1] = c + '0';
            int inc = ((char) (c + '0') == s[i - 1]) ? 0: 1;
            if (dp[i - 1][j][c] == dp[i][j][c] - inc) {
                i--;
                next_c = c;
            } else {
                i--;
                j--;
                next_c = -1;
            }
        }
        cout << result << '\n';
    }
}
