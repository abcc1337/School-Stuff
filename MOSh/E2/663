type
  tlist = array [1..3000, 1..2] of longint;

var
  s: array [1..3000] of longint;
  s1: array [1..3000] of longint;
  s2: tlist;
  i, n, k, ch, c, l, r, m: longint;

function check(p, q: longint): longint;
var
  b: longint;
begin
  writeln('? ', p, ' ', q);
  flush(output);
  readln(b);
  check := b;
end;

function checkk: boolean;
begin
  checkk := (k - m + 1 >= check(s2[m, 2], i));
end;

procedure qsort(var a: tlist);
  
  procedure sort(l, r: longint);
  var
    i, j, x, y: longint;
  begin
    i := l;
    j := r;
    x := a[(l + r) div 2, 2];
    repeat
      while a[i, 2] < x do
        inc(i);
      while x < a[j, 2] do
        dec(j);
      if not (i > j) then
      begin
        y := a[i, 1];
        a[i, 1] := a[j, 1];
        a[j, 1] := y;
        y := a[i, 2];
        a[i, 2] := a[j, 2];
        a[j, 2] := y;
        inc(i);
        j := j - 1;
      end;
    until i > j;
    if l < j then
      sort(l, j);
    if i < r then
      sort(i, r);
  end;

begin
  sort(1, k);
end;

begin
  readln(n);
  ch := 0;
  for i := 1 to n do s[i] := 0;
  for i := 1 to n do 
  begin
    c := check(1, i);
    if c > ch then begin
      ch := c;
      k := c;
      s[i] := c;
      s1[c] := i;
      s2[c, 2] := i;
      s2[c, 1] := c;
      qsort(s2);
    end
    else begin
      l := 0;
      r := k + 1;
      while 
      r - l > 1 do 
      begin
        m := (r - l) div 2 + l;
        if checkk then l := m else r := m;
      end;
      m := l;
      s[i] := s2[m, 1];
      s2[m, 2] := i;
      qsort(s2);
    end;
  end; 
  writeln ('Ready!');
  writeln (k);
  for i:=1 to n do write (s[i],' ');
end.