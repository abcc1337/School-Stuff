#include <iostream>
#include <fstream>

using namespace std;

ifstream fin("grants.in");
ofstream fout("grants.out");

int t;
bool ans = false, Pow[70], aa;
long long n, h, ni, hi, a, b, c, A, B, C, p[70], l, r, x, y;

int max_pow(long long a, long long k) {
	int l = 0, r = 62;
	while (r - 1 > l) {
		int m = (r + l) / 2;
		if (p[m] * k <= a)
			l = m;
		else
			r = m;
	}
	return l;
}

bool recalc(long long u) {
	if (u == 0) {
		A = a;
		B = b;
		C = c;
		fout << A << ' ' << B << ' ' << C << endl;
		return true;
	}
	ans = false;
	for (int i = 0; i <= max_pow(u, 1) && !ans; i++) {
		if (!Pow[i]) {
				if ((p[i]) * 2 <= u) {
					Pow[i] = true;
					a += p[i];
					b += p[i];
					ans |= recalc(u - (p[i]) * 2);
					Pow[i] = false;
					a -= p[i];
					b -= p[i];
				}
				else {
					if ((p[i]) * 1 <= u) {
						Pow[i] = true;
						a += p[i];
						ans |= recalc(u - (p[i]));
						Pow[i] = false;
						a -= p[i];
					}
				}
		}
	}
	return ans;
}

int main() {
	fin >> t;
	p[0] = 1;
	for (int i = 1; i < 61; i++) {
		p[i] = p[i - 1] * 2;
	}
	for (int _ = 0; _ < t; _++) {
		fin >> n;
		if (n % 3 == 0) {
			fout << n / 3 << ' ' << n / 3 << ' ' << n / 3 << endl;
			continue;
		}
		h = n / 3;
		l = 0;
		r = h;
		aa = false;
		while ((r >= 0) && !aa) {
			for (int i = 0; i < 60; i++) {
				Pow[i] = false;
			}
			x = max_pow(r, 1);
			y = r;
			for (int i = x; i >= 0; i--) {
				if (y >= (p[i])) {
					Pow[i] = true;
					y -= (p[i]);
				}
			}
			a = r;
			b = r;
			c = r;
			aa = recalc(n - r * 3);
			r--;
		}
	}
	return 0;
}