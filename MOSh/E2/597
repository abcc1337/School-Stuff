fin = open('submarine.in', 'r')
fout = open('submarine.out', 'w')
k = int(fin.readline())
s = [int(i) for i in fin.readline().split()]
n, m = [int(i) for i in fin.readline().split()]
g = [[i for i in fin.readline()] for j in range(n)]
for i in range(n):
    for j in range(m):
        g[i][j] = s[ord(g[i][j]) - 97]
k = min(s)
v = k * n
y = [[0] * n for i in range(m)]
for j in range(m):
    y[j][0] = g[0][j]
    for i in range(1, n):
        y[j][i] = y[j][i - 1] + g[i][j]
r = [[0] * m for i in range(n)]
for j in range(m):
    r[0][j] = 0
    for i in range(1, n):
        r[i][j] = min(r[i - 1][j], y[j][i - 1])
u = [[0] * m for i in range(n)]
for j in range(m):
    u[n - 1][j] = y[j][n - 1]
    for i in range(n - 2, -1, -1):
        u[i][j] = max(u[i + 1][j], y[j][i])
for i in range(n):
    a = g[i][0] + g[i][1]
    b = a + y[0][i] - r[i][0] - g[i][0]
    c = b + u[i][1] - r[i][1] - g[i][1]
    v = max(c, v)
    for j in range(2, m):
        a = max(g[i][j] + a, g[i][j] + g[i][j - 1])
        b = max(b + g[i][j], a + y[j - 1][i] - r[i][j - 1] - g[i][j - 1])
        c = max(c + g[i][j], b + u[i][j] - r[i][j] - g[i][j])
        v = max(v, c)
fout.write(str(v))