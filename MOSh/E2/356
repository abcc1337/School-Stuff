program N2a;

{$APPTYPE CONSOLE}

uses
  SysUtils,
  math;
  var x,y:array [0..1001] of longint;
      l,p:array [0..1001] of longint;
   n,k,i,j,c,m,v,z,qw:longint;
   procedure naw;
    var i,j,q,w,k1,k2:longint;
    begin
     c:=0;
      for i:=z to v-1 do
        begin
          q:=max(l[i],l[i+1]);
          w:=min(p[i],p[i+1]);
          k1:=((w-i) div k);
          if (w-i)mod k<>0 then k1:=k1+1;
          k1:=k1*k-q+i;
          k2:=k1 div k;
          if k1 mod k<>0 then k2:=k2+1;
          c:=c+k2;
        end;
    end;
begin
  assign(input,'monument.in');
  reset(input);
  readln(n,k);
  v:=0;
  z:=1000;
  for i:=1 to n do
   readln(x[i],y[i]);
  x[n+1]:=x[1];
  y[n+1]:=y[1];
  close(input);
  m:=0;
  for i:=0 to 1000 do
   l[i]:=-1;
  for i:=1 to n do
   begin
    if x[i]=x[i+1] then
     for j:=min(y[i],y[i+1]) to max(y[i],y[i+1]) do
      begin
        if l[j]=-1 then
         begin
         l[j]:=x[i];
         p[j]:=x[i];
          end
           else
            begin
             if x[i]>p[j] then p[j]:=x[i];
             if x[i]<l[j] then l[j]:=x[i];
            end;
        if j>v then v:=j;
        if j<z then z:=j;
     end;
   end;
   qw:=0;
    for i:=1 to k do
     begin
     qw:=qw+(p[i]-l[i]) div k;
     if (p[i]-l[i]) mod k<>0 then qw:=qw+1;
     end;
     for i:=1 to k do
      begin
       naw;
       if i=1 then m:=c;
       if c<m then m:=c;
       if m=qw then break;
       for j:=z to v do
        begin
        l[j]:=l[j]+1;
        p[j]:=p[j]+1;
        end;
      
      end;



  assign(output,'monument.out');
  rewrite(output);
   writeln(m);
    
  close(output);
end.
 