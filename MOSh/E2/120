#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <set>
#include <map>

#define rep(i, n) for (decltype(n) i = 0; i < n; i++)
#define dep(i, n) for (decltype(n) i = n - 1; i >= 0; i--)
#define FOR(i, a, b) for (decltype(b) i = a; i <= b; i++)
#define FORD(i, a, b) for (decltype(a) i = a; i >= b; i--)
#define len(a) (int)a.size()
#define all(a) a.begin(), a.end()
typedef long long int64;
using namespace std;

const int maxn = 1e5 + 10;
int64 a[maxn], k[maxn];
pair<pair<int64, int64>, int> x[maxn];
pair<pair<int64, int64>, int> y[maxn];
int main()
{
	freopen("castle.in", "r", stdin);
	freopen("castle.out", "w", stdout);
	int64 n, s;
	cin >> n >> s;
	rep(i, n)
	{
		cin >> a[i] >> k[i];
		x[i] = { {k[i], a[i]}, (int)i };
	}
	sort(x, x + n);
	int64 ans = 0;
	dep(i, n)
	{
		int64 curx = x[i].first.second / x[i].first.first;
		if (s >= curx)
			s -= curx, a[x[i].second] -= curx * x[i].first.first;
		else
		{
			curx = s;
			s = 0;
			a[x[i].second] -= curx * x[i].first.first;
		}
	}
	//rem
	dep(i, n)
	{
		while (a[x[i].second] - k[x[i].second] >= 0 && s > 0)
			s--, a[x[i].second] -= k[x[i].second];
	}
	rep(i, n)
	{
		y[i] = { { a[i], k[i] }, (int)i };
	}
	sort(y, y + n);
	dep(i, n)
	{
		if (a[y[i].second] <= k[y[i].second] && s > 0)
			s--, a[y[i].second] = 0ll;
	}
	rep(i, n)
		ans += a[i];
	//rem
	cout << ans << endl;
	return 0;
}