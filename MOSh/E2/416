#include <bits/stdc++.h>

using namespace std;

const int MAXN = 5000;
const int INF = 1e9;
int a[MAXN][MAXN];

int main()
{
    //ifstream cin("input.txt");
    freopen("monument.in", "r", stdin);
    freopen("monument.out", "w", stdout);
    int n, k;
    cin >> n >> k;
    vector <int> x(n), y(n), l, r;
    l.assign(MAXN, INF);
    r.assign(MAXN, -INF);
    for (int i = 0; i < n; i++)
        cin >> x[i] >> y[i];
    for (int i = 1; i <= n; i++)
    {
        if (x[i % n] > x[i - 1])
        {
            r[y[i % n] + 1] = max(x[i % n], r[y[i % n]]);
        }
        if (x[i % n] < x[i - 1])
        {
            l[y[i % n]] = min(x[i % n] + 1, l[y[i % n]]);
        }
        if (y[i % n] > y[i - 1])
            for (int w = y[i - 1] + 1; w <= y[i % n]; w++)
                r[w] = max(x[i % n], r[w]);
        if (y[i % n] < y[i- 1])
            for (int w = y[i % n] + 1; w <= y[i - 1]; w++)
                l[w] = min(x[i % n] + 1, l[w]);
    }

    for (int i = 1; i <= 1005 + k; i++)
    {
        int col = 1;
        for (int j = 1; j <= 1005 + k; j++)
        {
                if ((j - i) % k == 0)
                    col++;
                a[i][j] = col;

        }
    }
    int ans = INF;
    for (int i = 0; i <= 2 * k; i++)
    {
        int sum = 0;
        bool f = false;
        for (int w = 1; w <= 1000; w++)
        {
            if (l[w] != INF)
            {
                f = true;
                sum += a[w][r[w] + i] -  a[w][l[w] + i] + 1;
            }
            else
                if (f)
                    break;
        }
        ans = min(ans, sum);

    }
    cout << ans;
    return 0;
}
