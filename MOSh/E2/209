#include <bits/stdc++.h>

using namespace std;

int q(int i, int j) {
    cout << "? " << i << " " << j << "\n";
    cout.flush();
    int a;
    cin >> a;
    return a;
}
/*
int tree(vector <int> &v, int i, int l, int r, int ql, int qr) {
    //cout << i << " " << l << " " << r << "kek\n";
    if (r <= ql || qr <= l) {
        return 0;
    }
    if (l >= ql && r <= qr) {
        if (v[i] == 0) {
            cout << i << "\n";
            v[i] = q(l + 1, r);
        }
        return v[i];
    }

    return tree(v, 2 * i, l, (r + l) / 2, ql, qr) + tree(v, 2 * i + 1, (r + l) / 2, r, ql, qr);
}
*/
int cnt(vector < vector <int> > &v, int l, int r) {
    if (v[l][r] == 0)
        v[l][r] = q(l + 1, r + 1);
    return v[l][r];
}
int main(){

    int n;
    cin >> n;
    /*int sz = 1;
    while(sz < n) {
        sz = (sz << 1);
    }*/
    //cout << sz << "\n";
    vector< vector <int> > v(n, vector <int> (n, 0));
    for (int i = 0; i < n; i++)
        v[i][i] = 1;

    /*
    for (int i : v)
        cout << i << " ";
    cout << "\n";
    */
    vector <int> ans(n);
    int color = 1;
    ans[0] = color++;

    //cout << tree(v, 1, 0, n, 0, 1)  << "\n";

    for(int i = 1; i < n; i++) {
        //cout << tree(v, 1, 0, n - 1, 0, i) << " " << tree(v, 1, 0, n - 1, 0, i - 1) << "\n";

        if (cnt(v, 0, i) == (cnt(v, 0, i - 1) + 1) ) {
            ans[i] = color++;
        }
        else {
            int l = -1, r = i;
            while (r - l > 1) {
                int m = (l + r) / 2;
                if (cnt(v, m, i) == cnt(v, m, i - 1) + 1)
                    r = m;
                else
                    l = m;
            }
            ans[i] = ans[l];
        }
    }

    for (int i = 0; i < n; i++)
        cout << ans[i] << " ";
    cout << "\n";
    cout.flush();
}
